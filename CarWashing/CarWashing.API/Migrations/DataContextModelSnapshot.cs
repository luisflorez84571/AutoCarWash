// <auto-generated />
using System;
using CarWashing.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarWashing.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarWashing.Shared.Entities.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<int?>("BillId1")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId1")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("BillId1");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId1");

                    b.HasIndex("BillId", "ClientId", "MontoTotal")
                        .IsUnique();

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Celphone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ClientId1")
                        .HasColumnType("int");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId");

                    b.HasIndex("ClientId1");

                    b.HasIndex("FirstName")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<string>("HorarioTrabajo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Fecha")
                        .HasMaxLength(20)
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoryId1")
                        .HasColumnType("int");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId1")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("VehículoId")
                        .HasColumnType("int");

                    b.HasKey("HistoryId");

                    b.HasIndex("ClientId");

                    b.HasIndex("HistoryId1");

                    b.HasIndex("ServiceId1");

                    b.HasIndex("VehicleId");

                    b.HasIndex("HistoryId", "Descripcion")
                        .IsUnique();

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Scheduling", b =>
                {
                    b.Property<int>("SchedulingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchedulingId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Hour")
                        .HasMaxLength(50)
                        .HasColumnType("time");

                    b.Property<int?>("SchedulingId1")
                        .HasColumnType("int");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId1")
                        .HasColumnType("int");

                    b.Property<string>("VehicleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.HasKey("SchedulingId");

                    b.HasIndex("ClientId");

                    b.HasIndex("SchedulingId1");

                    b.HasIndex("ServiceId1");

                    b.HasIndex("VehicleId1");

                    b.HasIndex("SchedulingId", "ClientId", "VehicleId", "date")
                        .IsUnique()
                        .HasFilter("[VehicleId] IS NOT NULL");

                    b.ToTable("Schedulings");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ServiceId1")
                        .HasColumnType("int");

                    b.Property<string>("Servicio")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Vehiculo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ServiceId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId1");

                    b.HasIndex("ServiceId", "Servicio")
                        .IsUnique();

                    b.ToTable("Services");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NúmeroPlaca")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("ClientId");

                    b.HasIndex("VehicleId1");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Bill", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Bill", null)
                        .WithMany("Bills")
                        .HasForeignKey("BillId1");

                    b.HasOne("CarWashing.Shared.Entities.Client", "Client")
                        .WithMany("Bills")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashing.Shared.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId1");

                    b.Navigation("Client");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Client", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Client", null)
                        .WithMany("Clients")
                        .HasForeignKey("ClientId1");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Employee", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Employee", null)
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId1");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.History", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashing.Shared.Entities.History", null)
                        .WithMany("Histories")
                        .HasForeignKey("HistoryId1");

                    b.HasOne("CarWashing.Shared.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId1");

                    b.HasOne("CarWashing.Shared.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");

                    b.Navigation("Client");

                    b.Navigation("Service");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Scheduling", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashing.Shared.Entities.Scheduling", null)
                        .WithMany("Schedulings")
                        .HasForeignKey("SchedulingId1");

                    b.HasOne("CarWashing.Shared.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId1");

                    b.HasOne("CarWashing.Shared.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId1");

                    b.Navigation("Client");

                    b.Navigation("Service");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Service", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashing.Shared.Entities.Service", null)
                        .WithMany("Services")
                        .HasForeignKey("ServiceId1");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Vehicle", b =>
                {
                    b.HasOne("CarWashing.Shared.Entities.Client", "Client")
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarWashing.Shared.Entities.Vehicle", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleId1");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Bill", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Client", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Clients");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Employee", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.History", b =>
                {
                    b.Navigation("Histories");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Scheduling", b =>
                {
                    b.Navigation("Schedulings");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Service", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("CarWashing.Shared.Entities.Vehicle", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
