@inject SweetAlertService sweetAlertService

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>
<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label>Marca:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Vehicle.Marca" />
            <ValidationMessage For="@(() => Vehicle.Marca)" />
        </div>
        <br />
        <label>Color:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Vehicle.Color" />
            <ValidationMessage For="@(() => Vehicle.Color)" />
        </div>
        <br />
        <label>Placa:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Vehicle.NumeroPlaca" />
            <ValidationMessage For="@(() => Vehicle.NumeroPlaca)" />
        </div>
        <br />
        
    </div>

    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {

    private EditContext editContext = null!;

    [EditorRequired]
    [Parameter]
    public Vehicle Vehicle { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    protected override void OnInitialized()
    {
        editContext = new(Vehicle);

    }
    
    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await sweetAlertService.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true,
                CancelButtonText = "No",
                ConfirmButtonText = "Si"
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}