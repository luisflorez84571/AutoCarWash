@page "/vehicles/create"
@using CarWashing.Shared.Entities;
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear vehiculo</h3>

<VehicleForm @ref="vehicleForm" Vehicle="vehicle" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Vehicle vehicle = new();
    private const string Uri = "/vehicles";
    private VehicleForm vehicleForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/vehicles", vehicle);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        vehicleForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/vehicles");
    }

    private void Return() => navigationManager.NavigateTo(Uri);
}
