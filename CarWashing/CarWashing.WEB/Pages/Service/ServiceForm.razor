@using CarWashing.Shared.Entities;
@inject SweetAlertService swal

<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>
<EditForm EditContext="editContext" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <h3>Tipo de Servicio:</h3>
        <InputSelect class="form-control" @bind-Value="@Service.Servicio">            
            <option value=""></option>
            <option value="sencilla">Lavada sencilla</option>
            <option value="full">Lavada full</option>
            <option value="motor">Lavada de motor</option>
            <option value="brillada">Brillada</option>
        </InputSelect>
        <br />
        @if (!string.IsNullOrEmpty(Service.Servicio))
        {
            <p>Seleccionaste: @Service.Servicio</p>
        }
        else
        {
            <p>No has seleccionado un servicio</p>
        }

        <h3>Tipo de Vehiculo:</h3>
        <InputSelect class="form-control" @bind-Value="@Service.Vehiculo">
            <option value=""></option>
            <option value="Liviano">Liviano</option>
            <option value="Camioneta">Camioneta</option>
            <option value="Van">Van</option>
            <option value="Camion">Camion</option>
        </InputSelect>        
        <br />
        @if (!string.IsNullOrEmpty(Service.Vehiculo))
        {
            <p>Seleccionaste: @Service.Vehiculo</p>
        }
        else
        {
            <p>No has seleccionado el tipo de vehiculo</p>
        }
        
        <h3>El valor es: @Service.Precio</h3>

        @code {
            public int PrecioServicio()
        {
            string servicio = Service.Servicio;
            string vehiculo = Service.Vehiculo;

            if (!string.IsNullOrEmpty(servicio) && !string.IsNullOrEmpty(vehiculo))
            {               
                if (servicio == "sencilla")
                {
                    if (vehiculo == "Liviano")
                    {
                        Service.Precio = 10;
                        
                    }
                    else if (vehiculo == "Camioneta")
                    {
                        Service.Precio = 15;
                        
                    }
                    else if (vehiculo == "Van")
                    {
                        Service.Precio = 15;
                        
                    }
                    else if (vehiculo == "Camion")
                    {
                        Service.Precio = 15;
                        
                    }                                       
                }
                else if (servicio == "full")
                {
                    if (vehiculo == "Liviano")
                    {
                        return 10;
                    }
                    else if (vehiculo == "Camioneta")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Van")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Camion")
                    {
                        return 15;
                    }                    
                }
                else if (servicio == "motor")
                {
                    if (vehiculo == "Liviano")
                    {
                        return 10;
                    }
                    else if (vehiculo == "Camioneta")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Van")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Camion")
                    {
                        return 15;
                    }                    
                }
                else if (servicio == "brillada")
                {
                    if (vehiculo == "Liviano")
                    {
                        return 10;
                    }
                    else if (vehiculo == "Camioneta")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Van")
                    {
                        return 15;
                    }
                    else if (vehiculo == "Camion")
                    {
                        return 15;
                    }                    
                }
            }

             return 0; // Valor predeterminado si no se encuentra una combinación válida
            
        }
            
        }

    </div>

    <button class="btn btn-primary" type="submit">Guardar Cambios</button>
    <button class="btn btn-success" @onclick="ReturnAction">Regresar</button>
</EditForm>

@code {


    private EditContext editContext = null!;

    protected override void OnInitialized()
    {
        editContext = new(Service);

    }


    [EditorRequired]
    [Parameter]
    public Service Service { get; set; } = null!;

    [EditorRequired]
    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback ReturnAction { get; set; }

    public bool FormPostedSuccessfully { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formWasEdited = editContext.IsModified();

        if (!formWasEdited)
        {
            return;
        }

        if (FormPostedSuccessfully)
        {
            return;
        }

        var result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmación",
                Text = "¿Deseas abandonar la página y perder los cambios?",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true
            });

        var confirm = !string.IsNullOrEmpty(result.Value);

        if (confirm)
        {
            return;
        }

        context.PreventNavigation();
    }
}